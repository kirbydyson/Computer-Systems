Microsoft (R) Macro Assembler Version 14.16.27051.0	    03/19/24 22:21:29
P6_1_Dyson.asm						     Page 1 - 1


				; Author:                 Kirby Dyson
				; Assignment Title:       P6_1, Product of Positives
				; Assignment Description: computes the product of positive inputs

				; Due Date:               3/20/2024
				; Date Created:           3/18/2024
				; Date Last Modified:     3/19/2024

				.586                                        ; specify 32 bit processor
				.MODEL FLAT                                 ; specify memory model as flat

				INCLUDE io.h                                ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096                                 ; set size to 4096 bytes

 00000000			.DATA
 00000000 45 6E 74 65 72	prompt1 BYTE    "Enter value", 0            ; message to get values
	   20 76 61 6C 75
	   65 00
 0000000C  00000014 [		string  BYTE    20 DUP (?)                  ; buffer to store input
	    00
	   ]
 00000020 54 68 65 20 70	result  BYTE    "The product is", 0         ; message for displaying product
	   72 6F 64 75 63
	   74 20 69 73 00
 0000002F  0000000B [		product DWORD   11 DUP (?), 0               ; buffer to store product
	    00000000
	   ] 00000000
 0000005F 54 68 65 20 23	result2 BYTE    "The # of zeros are", 0     ; message for displaying # of zeros
	   20 6F 66 20 7A
	   65 72 6F 73 20
	   61 72 65 00
 00000072  0000000B [		zeros   BYTE    11 DUP (?), 0               ; buffer to store # of zeros
	    00
	   ] 00

 00000000			.CODE
 00000000			_MainProc PROC
 00000000  BB 00000001		        mov     ebx, 1                      ; initialize ebx to 1
 00000005  66| BA 0000		        mov     dx, 0                       ; initialize dx to 0
 00000009  66| B9 000A		        mov     cx, 10                      ; initialize cx to 10

 0000000D			inLoop:
				        input   prompt1, string, 20         ; prompt user for values
				        atod    string                      ; convert to integer
 0000003A  66| 83 F8 00		        cmp     ax, 0                       ; compare value to zero
 0000003E  75 08		        jnz     nonZero                     ; jump if input is positive
 00000040  66| 42		        inc     dx                          ; increment # of zeros
 00000042  66| 83 FA 00		        cmp     dx, 0                       ; compare # of zeros to 0
 00000046  75 C5		        jne     inLoop                      ; loop again if no zeros

 00000048			nonZero:       
 00000048  0F B7 C0		        movzx   eax, ax                     ; zero extend value
 0000004B  0F AF D8		        imul    ebx, eax                    ; multiply value
 0000004E  E2 BD		        loop    inLoop                      ; loop again
				       
				        dtoa    product, ebx                ; convert product to ASCII
				        wtoa    zeros, dx                   ; convert # of zeros to ASCII
				        output  result, product             ; display the product
				        output  result2, zeros              ; display the # of zeros

 000000B3  2B C0		        sub     eax, eax                    ; exit with return code 0
 000000B5  C3			        ret                                 ; return to calling code
 000000B6			_MainProc ENDP
				END                                         ; end of source code


Microsoft (R) Macro Assembler Version 14.16.27051.0	    03/19/24 22:21:29
P6_1_Dyson.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000007E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000B6 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000B6 Public
  inLoop . . . . . . . . . . . .	L Near	 0000000D _TEXT	
  nonZero  . . . . . . . . . . .	L Near	 00000048 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
product  . . . . . . . . . . . .	DWord	 0000002F _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
result2  . . . . . . . . . . . .	Byte	 0000005F _DATA	
result . . . . . . . . . . . . .	Byte	 00000020 _DATA	
string . . . . . . . . . . . . .	Byte	 0000000C _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
zeros  . . . . . . . . . . . . .	Byte	 00000072 _DATA	

	   0 Warnings
	   0 Errors

Microsoft (R) Macro Assembler Version 14.16.27051.0	    02/20/24 15:12:25
P4_0_Dyson.asm						     Page 1 - 1


				; Author:                 Kirby Dyson
				; Assignment Title:       P4_0, Evaluate an Expression
				; Assignment Description: tbd

				; Due Date:               2/23/2024
				; Date Created:           2/20/2024
				; Date Last Modified:     tbd

				.586                                             ; specify 32 bit processor
				.MODEL FLAT                                      ; specify memory model as flat

				INCLUDE io.h                                     ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096                                      ; set the size to 4096 bytes

 00000000			.DATA
 00000000 45 6E 74 65 72	prompt1 BYTE    "Enter the number of apples", 0  ; message to get the first value 
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   61 70 70 6C 65
	   73 00
 0000001B 45 6E 74 65 72	prompt2 BYTE    "Enter the number of oranges", 0 ; message to get the second value
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   6F 72 61 6E 67
	   65 73 00
 00000037 45 6E 74 65 72	prompt3 BYTE    "Enter the number of bananas", 0 ; message to get the third value
	   20 74 68 65 20
	   6E 75 6D 62 65
	   72 20 6F 66 20
	   62 61 6E 61 6E
	   61 73 00
 00000053  00000014 [		string  BYTE    20 DUP (?)                       ; buffer to store the input
	    00
	   ]
 00000067 54 68 65 20 74	result  BYTE    "The total number is", 0         ; message for displaying the result
	   6F 74 61 6C 20
	   6E 75 6D 62 65
	   72 20 69 73 00
 0000007B  0000000B [		sum     BYTE    11 DUP (?), 0                    ; buffer to store the total
	    00
	   ] 00

 00000000			.CODE
 00000000			_MainProc PROC
				        input   prompt1, string, 20              ; prompt user for first value
				        atod    string                           ; convert user input to numeric value
 0000002D  8B D8		        mov     ebx, eax                         ; store first value in scratch

				        input   prompt2, string, 20              ; prompt user for second value
				        atod    string                           ; convert user input to numeric value
 0000005C  03 D8		        add     ebx, eax                         ; add first value to second
 0000005E  8B C3		        mov     eax, ebx                         ; copy value to eax
 00000060  03 DB		        add     ebx, ebx                         ; ebx = 2(first + second)
 00000062  03 DB		        add     ebx, ebx                         ; ebx = 4(first + second)
 00000064  03 D8		        add     ebx, eax                         ; ebx = 5(first + second)

				        input   prompt3, string, 20              ; prompt user for third value
				        atod    string                           ; convert user input to numeric value

 00000093  03 C0		        add     eax, eax                         ; double the third value
 00000095  F7 D8		        neg     eax;                             ; eax = 5(first)+5(second)-2(third value)
 00000097  03 C3		        add     eax, ebx
				       
				        dtoa    sum, eax                         ; convert total to ASCII
				        output  result, sum                      ; display results to stdout

 000000CA  2B DB		        sub     ebx, ebx                         ; exit with return code 0
 000000CC  C3			        ret                                      ; return to calling code
 000000CD			_MainProc ENDP                
				END                                              ; end of source code

Microsoft (R) Macro Assembler Version 14.16.27051.0	    02/20/24 15:12:25
P4_0_Dyson.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000087 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000CD Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000CD Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
prompt1  . . . . . . . . . . . .	Byte	 00000000 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 0000001B _DATA	
prompt3  . . . . . . . . . . . .	Byte	 00000037 _DATA	
result . . . . . . . . . . . . .	Byte	 00000067 _DATA	
string . . . . . . . . . . . . .	Byte	 00000053 _DATA	
sum  . . . . . . . . . . . . . .	Byte	 0000007B _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
